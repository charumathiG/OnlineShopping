/*
Deployment script for OnlineShoppingSite

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "OnlineShoppingSite"
:setvar DefaultFilePrefix "OnlineShoppingSite"
:setvar DefaultDataPath "C:\Users\charumathi.gunasekar\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"
:setvar DefaultLogPath "C:\Users\charumathi.gunasekar\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating [dbo].[AddToCart]...';


GO
CREATE PROCEDURE [dbo].[AddToCart]
(
@CustomerID INT,
@Product_Id VARCHAR(5)
)
AS
DECLARE @DATE DATE = (SELECT CONVERT(DATE,GETDATE()))
BEGIN
	INSERT INTO [dbo].[AddToCart] VALUES
	(
	@Product_Id,
	@CustomerID,
	@Date
	)
END
GO
PRINT N'Creating [dbo].[CancelOrder]...';


GO
CREATE PROCEDURE [dbo].[CancelOrder]
(
@OrderID int
)
as
begin
delete from [dbo].[Payment] where OrderID=@OrderID
end
GO
PRINT N'Creating [dbo].[Feedback]...';


GO
CREATE PROCEDURE  [dbo].[Feedback]
(
@CustomerID INT,
@Product_Id VARCHAR(5),
@Comment VARCHAR(300)
)
AS
BEGIN
	INSERT INTO [dbo].[Feedback] VALUES
	(
	@Product_Id,
	@CustomerID,
	@Comment
	)
END
GO
PRINT N'Creating [dbo].[Orders]...';


GO
CREATE PROCEDURE [dbo].[Orders]
(
@CustomerID INT,
@PRODUCT_ID VARCHAR(5),
@QUANTITY INT
)
AS
DECLARE @DATE DATE = (SELECT CONVERT(DATE,GETDATE()))
BEGIN
	INSERT INTO [dbo].[Orders] VALUES
	(
	@PRODUCT_ID,
	@DATE,@DATE,
	@CustomerID,
	@QUANTITY,
	'PAYMENT PENDING'
	)
END
GO
PRINT N'Creating [dbo].[Payment]...';


GO
CREATE PROCEDURE [dbo].[Payment]
(
@OrderID int ,
@Product_Id varchar(5),
@TotalPrice numeric(7,2)
)
as
DECLARE @DATE DATE = (SELECT CONVERT(DATE,GETDATE()))
begin
insert into [dbo].[Payment] values
(
@OrderID,
@Product_Id,
@TotalPrice,
@DATE
)
end
GO
PRINT N'Creating [dbo].[PaymentType]...';


GO
CREATE PROCEDURE [dbo].[PaymentType]
(
@PaymentMode varchar(20)
)
as
begin
select * from [dbo].[PaymentType] where Paymentmode = @PaymentMode
end

exec  proc_type 'credit'
GO
PRINT N'Creating [dbo].[Products]...';


GO
CREATE PROCEDURE [dbo].[Products]
as
begin
select * from [dbo].[Products]
end
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
create table Customers(
  CustomerID int IDENTITY(100,1) primary key,
  CustomerName varchar(50) not null,
  CustomerPhone varchar(11) not null,
  CustomerPassword varchar(100)not null,
  CustomerEmail varchar(100)not null,
  CustomerAddress varchar(100) not null
  )

 
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
create table Payment(
        
    Payment_Id int IDENTITY(100,1),
	OrderID int not null constraint fk_OrderId foreign key references Orders(OrderID),
    Product_Id varchar(5) foreign key references Products(Product_Id),
	TotalPrice numeric(7,2),
    PaymentMode varchar(20)not null,
	date[date]
)

/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
create table Orders(
	OrderID int IDENTITY(1,1) primary key clustered,
	Product_Id varchar(5) foreign key references Products(Product_Id),
	OrderDate date not null,
	OrderDeliveryDate datetime2(0)null,
	CustomerID int not null constraint fk_customer_Id foreign key references Customers(CustomerID),
	Quantity int,
	Status varchar(20)
)

/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
create table Products(
  Id int identity primary key,
  Product_Id AS 'P'+RIGHT('0000'+CAST(Id AS VARCHAR(10)),4) persisted unique,
  Product_Name varchar(100)not null,
  Category varchar(50),
  Product_Type varchar(50),
  Descriptions1 varchar(600)not null,
  Price numeric(7,2)not null,
  Quantity int,
  Images varchar(400)unique
)



/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
create table Feedback(
	CustomerID int not null foreign key references Customers(CustomerID),
	Product_Id varchar(5) foreign key references Products(Product_Id),
	Comment varchar(300) not null
	)
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
create table AddToCart(
	ID int IDENTITY(1,1),
	CustomerID int not null foreign key references Customers(CustomerID),
	Product_Id varchar(5) foreign key references Products(Product_Id),
	Date[date]
	)







GO

GO
PRINT N'Update complete.';


GO
